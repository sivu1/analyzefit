"""Tests the manipulation of the data used in the regression model for the generation of plots.
"""

import pytest
import numpy as np
import sys

def test_hat_matrix():
    """Tests that the hat matrix is calculated correctly."""

    from analyzefit.manipulate import _hat_matrix

    X = np.array([[1.66112, 1.40612, 2.37132, 59.4437],
                  [4.40942, 6.30544, 7.85037, 184.597],
                  [5.6603, 3.95655, 1.86166, 54.7368],
                  [7.98524, 3.65784, 2.36478, 79.4191],
                  [6.50832, 7.60277, 1.84098, 58.9496],
                  [7.96974, 3.6749, 3.31791, 107.298],
                  [0.605942, 8.93607, 4.21787, 84.5459],
                  [8.52038, 5.94204, 3.92919, 113.661],
                  [6.09536, 8.66082, 7.14356, 167.738],
                  [6.31377, 8.40808, 4.48139, 116.212]])
    hat_e = _hat_matrix(X)

    print(hat_e)
    hat_c = np.array([[0.714535, 0.156539, 0.196445, 0.0964378, -0.0920416,
                       0.155524, 0.192991, -0.109007, -0.181201, -0.130222],
                      [0.156539, 0.592179, -0.137269, -0.0432918, -0.234187,
                       0.157573, 0.0577301, 0.0540599, 0.324193, 0.0724724],
                      [0.196445, -0.137269, 0.560153, 0.3003, 0.0742272,
                       -0.191414, 0.0182801, 0.13781, 0.155704, -0.114236],
                      [0.0964378, -0.0432918, 0.3003, 0.306191, 0.0947528,
                       0.145427, -0.175064, 0.216084, 0.0601362, -0.000972654],
                      [-0.0920416, -0.234187, 0.0742272, 0.0947528, 0.453339,
                       0.125416, 0.241917, 0.12742, -0.065213, 0.274369],
                      [0.155524, 0.157573, -0.191414, 0.145427, 0.125416, 
                       0.603511, -0.157927, 0.157156, -0.180801, 0.185534],
                      [0.192991, 0.0577301, 0.0182801, -0.175064, 0.241917,
                       -0.157927, 0.679437, -0.130226, 0.0708859, 0.201975],
                      [-0.109007, 0.0540599, 0.13781, 0.216084, 0.12742,
                       0.157156, -0.130226, 0.245561, 0.178281, 0.122862],
                      [-0.181201, 0.324193, 0.155704, 0.0601362, -0.065213,
                       -0.180801, 0.0708859, 0.178281, 0.547445, 0.0905705],
                      [-0.130222, 0.0724724, -0.114236, -0.000972654, 0.274369,
                       0.185534, 0.201975, 0.122862, 0.0905705, 0.297649]])
    
    assert np.allclose(hat_c,hat_e,atol=1E-4,rtol=1E-4)

def test_hat_diags():
    """Tests that the hat matrix diagonals are correct."""

    from analyzefit.manipulate import hat_diags
    
    X = np.transpose([[0.479202, 0.483899, 1.12485, 1.37994, 1.99004, 2.00461, 2.19174, 
                       2.31673, 2.39434, 2.457, 3.28859, 4.79735, 4.87656, 5.14453, 5.21465, 
                       5.33461, 5.359, 5.69824, 6.79902, 6.95054, 7.05073, 7.13262, 7.28642, 
                       7.36735, 7.79836, 8.07578, 8.85264, 9.60637, 9.72281, 9.77034, 
                       10.4164, 10.8594, 11.5387, 11.6579, 12.2691, 12.3752, 12.3896, 
                       13.0862, 13.6543, 13.938, 14.8938, 15.3043, 16.0985, 16.8449, 
                       17.8554, 17.8928, 18.0273, 18.0696, 19.0202, 19.2751, 19.3079, 
                       19.4698, 19.6784, 19.8293, 20.1066, 21.0793, 21.2739, 21.4585, 
                       23.1579, 23.2451, 23.4266, 24.2772, 24.7329, 24.792, 25.1559, 
                       25.3455, 25.3503, 25.6221, 25.7455, 26.4869, 26.8205, 27.0374, 
                       27.3896, 27.5181, 27.5671, 27.9417, 28.1337, 28.1731, 28.425, 
                       28.5511, 28.7842, 29.2181, 29.7801, 29.9194, 29.9668, 30.4249, 
                       30.7463, 31.041, 31.2952, 32.3221, 32.4345, 32.4918, 32.5379, 
                       33.0415, 33.4898, 34.4961, 34.5672, 34.7643, 35.881, 36.3311, 
                       36.4072, 37.0102, 37.201, 37.4449, 37.7676, 37.889, 40.0924, 40.3041, 
                       40.8057, 40.8112, 40.9555, 41.1352, 41.6741, 41.7938, 41.8169, 
                       42.1887, 42.3595, 42.9264, 43.2869, 43.4127, 43.6847, 43.9566, 
                       44.3583, 44.5233, 45.3749, 45.4886, 46.6444, 46.9202, 47.1015, 
                       48.3918, 48.5442, 48.7195, 49.0324, 49.0578, 49.6099, 49.7539, 
                       49.7868, 50.2603, 51.7577, 51.971, 52.1712, 53.7215, 54.4039, 
                       54.6767, 54.8214, 54.9022, 55.0868, 55.1914, 55.6239, 56.1039, 
                       56.2126, 56.2839, 56.4567, 56.5018, 56.7138, 57.2884, 58.8989, 
                       59.3581, 60.0211, 60.188, 60.42, 61.7201, 61.9457, 62.0324, 62.2588, 
                       62.4712, 62.7032, 62.8915, 63.0346, 63.5183, 63.7153, 64.2719, 
                       65.4015, 65.5247, 66.5888, 66.6208, 66.8304, 67.419, 67.5166, 
                       68.1802, 68.2252, 68.6755, 68.9304, 69.0951, 69.755, 71.0651, 
                       71.2967, 72.1139, 72.2436, 72.9634, 73.666, 75.0538, 75.4153, 
                       75.6034, 75.7454, 76.2599, 76.4658, 76.5716, 76.7636, 76.9579, 
                       77.1953, 77.9275, 78.6175, 78.807, 78.9975, 80.0501, 80.371, 82.275, 
                       82.9121, 82.9633, 83.1403, 83.1704, 83.4267, 83.6417, 85.2246, 
                       85.4208, 85.7879, 85.9294, 86.2738, 86.6959, 86.8498, 87.3628, 
                       87.4812, 87.8757, 87.9387, 88.9554, 89.0955, 89.5329, 90.1248, 
                       90.3786, 91.2554, 92.9645, 93.2743, 93.2807, 93.9363, 94.1827, 
                       94.4288, 94.6912, 95.1545, 95.86, 96.2439, 96.707, 97.1782, 97.2767, 
              97.3542, 97.8719, 97.8728, 98.8373, 99.2863, 99.3378]])

    hat_d = hat_diags(X)

    assert np.allclose(hat_d,[0.0147642, 0.014762, 0.0144716,
                              0.0143571, 0.0140858, 0.0140794,0.0139969, 0.0139421, 0.0139081,
                              0.0138806, 0.0135205, 0.012884,0.0128512, 0.0127407, 0.0127119,
                              0.0126627, 0.0126527, 0.0125145,0.0120737, 0.0120139, 0.0119745,
                              0.0119424, 0.0118822, 0.0118506,0.0116836, 0.011577, 0.0112825,
                              0.0110024, 0.0109596, 0.0109422,0.0107075, 0.0105488, 0.0103093,
                              0.0102677, 0.0100567, 0.0100205,0.0100156, 0.00978029, 0.00959193,
                              0.00949899, 0.00919169,0.00906245, 0.00881698, 0.00859185,
                              0.00829563, 0.00828485,0.00824624, 0.00823411, 0.00796644,
                              0.00789615, 0.00788716,0.0078429, 0.00778625, 0.00774551,
                              0.00767123, 0.00741661,0.00736678, 0.00731985, 0.00690317,
                              0.00688255, 0.00683986,0.00664401, 0.00654196, 0.00652887,
                              0.00644902, 0.00640794,0.0064069, 0.00634861, 0.00632238,
                              0.00616791, 0.00610013,0.00605664, 0.00598701, 0.0059619,
                              0.00595237, 0.00588025,0.00584381, 0.00583637, 0.0057892,
                              0.00576582, 0.00572302,0.00564471, 0.00554601, 0.005522,
                              0.00551388, 0.00543652, 0.00538343,0.00533565, 0.00529511,
                              0.00513768, 0.00512107, 0.00511264,0.00510589, 0.00503346,
                              0.00497106, 0.00483805, 0.00482902,0.00480425, 0.004671,
                              0.0046207, 0.00461239, 0.00454853, 0.00452905,0.00450466,
                              0.00447328, 0.00446174, 0.00427699, 0.00426171,0.00422724,
                              0.00422688, 0.00421742, 0.00420592, 0.00417331,0.00416645,
                              0.00416515, 0.0041448, 0.0041359, 0.00410839,
                              0.00409251,0.00408727, 0.00407645, 0.00406635, 0.00405274,
                              0.00404761,0.00402527, 0.00402282, 0.004005, 0.00400265,
                              0.00400151, 0.00400258,0.00400377, 0.00400542, 0.00400909,
                              0.00400943, 0.00401837,0.00402118, 0.00402185, 0.00403267,
                              0.00408115, 0.00408982,0.00409836, 0.0041776, 0.00421985,
                              0.004238, 0.00424792, 0.00425354,0.00426664, 0.00427421,
                              0.0043066, 0.00434468, 0.00435361,0.00435953, 0.00437409,
                              0.00437794, 0.00439628, 0.00444818,0.00461067, 0.00466159,
                              0.00473871, 0.0047588, 0.00478717,0.00495576, 0.00498668,
                              0.00499869, 0.0050304, 0.0050606, 0.00509409,0.00512166,
                              0.00514284, 0.00521588, 0.00524628, 0.0053342,0.00552183,
                              0.00554303, 0.00573233, 0.00573821, 0.00577685,0.00588764,
                              0.00590634, 0.0060359, 0.00604483, 0.00613536,0.00618748,
                              0.00622148, 0.00636037, 0.00664861, 0.00670128,0.0068913,
                              0.00692205, 0.00709568, 0.00726999, 0.00762833,0.00772472,
                              0.00777538, 0.00781385, 0.00795488, 0.00801201,0.00804153,
                              0.0080954, 0.00815026, 0.00821781, 0.00842953,0.00863379,
                              0.00869071, 0.00874824, 0.00907259, 0.00917361,0.00979344,
                              0.0100087, 0.0100261, 0.0100867, 0.0100971, 0.0101854,0.01026,
                              0.0108229, 0.0108943, 0.011029, 0.0110813, 0.0112094,0.0113678,
                              0.011426, 0.0116217, 0.0116673, 0.0118199, 0.0118444,0.0122455,
                              0.0123015, 0.0124777, 0.0127191, 0.0128236, 0.0131895,0.0139242,
                              0.0140604, 0.0140632, 0.0143545, 0.0144651, 0.0145761,0.0146951,
                              0.0149069, 0.0152333, 0.015413, 0.0156316, 0.0158562,0.0159034,
                              0.0159406, 0.0161907, 0.0161911, 0.016664, 0.0168872,0.0169129])
    
