"""Tests the manipulation of the data used in the regression model for the generation of plots.
"""

import pytest
import numpy as np
import sys

def test_hat_matrix():
    """Tests that the hat matrix is calculated correctly."""

    from analyzefit.manipulate import _hat_matrix

    X = np.array([[1.66112, 1.40612, 2.37132, 59.4437],
                  [4.40942, 6.30544, 7.85037, 184.597],
                  [5.6603, 3.95655, 1.86166, 54.7368],
                  [7.98524, 3.65784, 2.36478, 79.4191],
                  [6.50832, 7.60277, 1.84098, 58.9496],
                  [7.96974, 3.6749, 3.31791, 107.298],
                  [0.605942, 8.93607, 4.21787, 84.5459],
                  [8.52038, 5.94204, 3.92919, 113.661],
                  [6.09536, 8.66082, 7.14356, 167.738],
                  [6.31377, 8.40808, 4.48139, 116.212]])
    hat_e = _hat_matrix(X)

    print(hat_e)
    hat_c = np.array([[0.714535, 0.156539, 0.196445, 0.0964378, -0.0920416,
                       0.155524, 0.192991, -0.109007, -0.181201, -0.130222],
                      [0.156539, 0.592179, -0.137269, -0.0432918, -0.234187,
                       0.157573, 0.0577301, 0.0540599, 0.324193, 0.0724724],
                      [0.196445, -0.137269, 0.560153, 0.3003, 0.0742272,
                       -0.191414, 0.0182801, 0.13781, 0.155704, -0.114236],
                      [0.0964378, -0.0432918, 0.3003, 0.306191, 0.0947528,
                       0.145427, -0.175064, 0.216084, 0.0601362, -0.000972654],
                      [-0.0920416, -0.234187, 0.0742272, 0.0947528, 0.453339,
                       0.125416, 0.241917, 0.12742, -0.065213, 0.274369],
                      [0.155524, 0.157573, -0.191414, 0.145427, 0.125416, 
                       0.603511, -0.157927, 0.157156, -0.180801, 0.185534],
                      [0.192991, 0.0577301, 0.0182801, -0.175064, 0.241917,
                       -0.157927, 0.679437, -0.130226, 0.0708859, 0.201975],
                      [-0.109007, 0.0540599, 0.13781, 0.216084, 0.12742,
                       0.157156, -0.130226, 0.245561, 0.178281, 0.122862],
                      [-0.181201, 0.324193, 0.155704, 0.0601362, -0.065213,
                       -0.180801, 0.0708859, 0.178281, 0.547445, 0.0905705],
                      [-0.130222, 0.0724724, -0.114236, -0.000972654, 0.274369,
                       0.185534, 0.201975, 0.122862, 0.0905705, 0.297649]])
    
    assert np.allclose(hat_c,hat_e,atol=1E-4,rtol=1E-4)

def test_hat_diags():
    """Tests that the hat matrix diagonals are correct."""

    from analyzefit.manipulate import hat_diags
    
    X = np.transpose([[0.479202, 0.483899, 1.12485, 1.37994, 1.99004, 2.00461, 2.19174, 
                       2.31673, 2.39434, 2.457, 3.28859, 4.79735, 4.87656, 5.14453, 5.21465, 
                       5.33461, 5.359, 5.69824, 6.79902, 6.95054, 7.05073, 7.13262, 7.28642, 
                       7.36735, 7.79836, 8.07578, 8.85264, 9.60637, 9.72281, 9.77034, 
                       10.4164, 10.8594, 11.5387, 11.6579, 12.2691, 12.3752, 12.3896, 
                       13.0862, 13.6543, 13.938, 14.8938, 15.3043, 16.0985, 16.8449, 
                       17.8554, 17.8928, 18.0273, 18.0696, 19.0202, 19.2751, 19.3079, 
                       19.4698, 19.6784, 19.8293, 20.1066, 21.0793, 21.2739, 21.4585, 
                       23.1579, 23.2451, 23.4266, 24.2772, 24.7329, 24.792, 25.1559, 
                       25.3455, 25.3503, 25.6221, 25.7455, 26.4869, 26.8205, 27.0374, 
                       27.3896, 27.5181, 27.5671, 27.9417, 28.1337, 28.1731, 28.425, 
                       28.5511, 28.7842, 29.2181, 29.7801, 29.9194, 29.9668, 30.4249, 
                       30.7463, 31.041, 31.2952, 32.3221, 32.4345, 32.4918, 32.5379, 
                       33.0415, 33.4898, 34.4961, 34.5672, 34.7643, 35.881, 36.3311, 
                       36.4072, 37.0102, 37.201, 37.4449, 37.7676, 37.889, 40.0924, 40.3041, 
                       40.8057, 40.8112, 40.9555, 41.1352, 41.6741, 41.7938, 41.8169, 
                       42.1887, 42.3595, 42.9264, 43.2869, 43.4127, 43.6847, 43.9566, 
                       44.3583, 44.5233, 45.3749, 45.4886, 46.6444, 46.9202, 47.1015, 
                       48.3918, 48.5442, 48.7195, 49.0324, 49.0578, 49.6099, 49.7539, 
                       49.7868, 50.2603, 51.7577, 51.971, 52.1712, 53.7215, 54.4039, 
                       54.6767, 54.8214, 54.9022, 55.0868, 55.1914, 55.6239, 56.1039, 
                       56.2126, 56.2839, 56.4567, 56.5018, 56.7138, 57.2884, 58.8989, 
                       59.3581, 60.0211, 60.188, 60.42, 61.7201, 61.9457, 62.0324, 62.2588, 
                       62.4712, 62.7032, 62.8915, 63.0346, 63.5183, 63.7153, 64.2719, 
                       65.4015, 65.5247, 66.5888, 66.6208, 66.8304, 67.419, 67.5166, 
                       68.1802, 68.2252, 68.6755, 68.9304, 69.0951, 69.755, 71.0651, 
                       71.2967, 72.1139, 72.2436, 72.9634, 73.666, 75.0538, 75.4153, 
                       75.6034, 75.7454, 76.2599, 76.4658, 76.5716, 76.7636, 76.9579, 
                       77.1953, 77.9275, 78.6175, 78.807, 78.9975, 80.0501, 80.371, 82.275, 
                       82.9121, 82.9633, 83.1403, 83.1704, 83.4267, 83.6417, 85.2246, 
                       85.4208, 85.7879, 85.9294, 86.2738, 86.6959, 86.8498, 87.3628, 
                       87.4812, 87.8757, 87.9387, 88.9554, 89.0955, 89.5329, 90.1248, 
                       90.3786, 91.2554, 92.9645, 93.2743, 93.2807, 93.9363, 94.1827, 
                       94.4288, 94.6912, 95.1545, 95.86, 96.2439, 96.707, 97.1782, 97.2767, 
              97.3542, 97.8719, 97.8728, 98.8373, 99.2863, 99.3378]])

    hat_d = hat_diags(X)

    assert np.allclose(hat_d,[0.0147642, 0.014762, 0.0144716,
                              0.0143571, 0.0140858, 0.0140794,0.0139969, 0.0139421, 0.0139081,
                              0.0138806, 0.0135205, 0.012884,0.0128512, 0.0127407, 0.0127119,
                              0.0126627, 0.0126527, 0.0125145,0.0120737, 0.0120139, 0.0119745,
                              0.0119424, 0.0118822, 0.0118506,0.0116836, 0.011577, 0.0112825,
                              0.0110024, 0.0109596, 0.0109422,0.0107075, 0.0105488, 0.0103093,
                              0.0102677, 0.0100567, 0.0100205,0.0100156, 0.00978029, 0.00959193,
                              0.00949899, 0.00919169,0.00906245, 0.00881698, 0.00859185,
                              0.00829563, 0.00828485,0.00824624, 0.00823411, 0.00796644,
                              0.00789615, 0.00788716,0.0078429, 0.00778625, 0.00774551,
                              0.00767123, 0.00741661,0.00736678, 0.00731985, 0.00690317,
                              0.00688255, 0.00683986,0.00664401, 0.00654196, 0.00652887,
                              0.00644902, 0.00640794,0.0064069, 0.00634861, 0.00632238,
                              0.00616791, 0.00610013,0.00605664, 0.00598701, 0.0059619,
                              0.00595237, 0.00588025,0.00584381, 0.00583637, 0.0057892,
                              0.00576582, 0.00572302,0.00564471, 0.00554601, 0.005522,
                              0.00551388, 0.00543652, 0.00538343,0.00533565, 0.00529511,
                              0.00513768, 0.00512107, 0.00511264,0.00510589, 0.00503346,
                              0.00497106, 0.00483805, 0.00482902,0.00480425, 0.004671,
                              0.0046207, 0.00461239, 0.00454853, 0.00452905,0.00450466,
                              0.00447328, 0.00446174, 0.00427699, 0.00426171,0.00422724,
                              0.00422688, 0.00421742, 0.00420592, 0.00417331,0.00416645,
                              0.00416515, 0.0041448, 0.0041359, 0.00410839,
                              0.00409251,0.00408727, 0.00407645, 0.00406635, 0.00405274,
                              0.00404761,0.00402527, 0.00402282, 0.004005, 0.00400265,
                              0.00400151, 0.00400258,0.00400377, 0.00400542, 0.00400909,
                              0.00400943, 0.00401837,0.00402118, 0.00402185, 0.00403267,
                              0.00408115, 0.00408982,0.00409836, 0.0041776, 0.00421985,
                              0.004238, 0.00424792, 0.00425354,0.00426664, 0.00427421,
                              0.0043066, 0.00434468, 0.00435361,0.00435953, 0.00437409,
                              0.00437794, 0.00439628, 0.00444818,0.00461067, 0.00466159,
                              0.00473871, 0.0047588, 0.00478717,0.00495576, 0.00498668,
                              0.00499869, 0.0050304, 0.0050606, 0.00509409,0.00512166,
                              0.00514284, 0.00521588, 0.00524628, 0.0053342,0.00552183,
                              0.00554303, 0.00573233, 0.00573821, 0.00577685,0.00588764,
                              0.00590634, 0.0060359, 0.00604483, 0.00613536,0.00618748,
                              0.00622148, 0.00636037, 0.00664861, 0.00670128,0.0068913,
                              0.00692205, 0.00709568, 0.00726999, 0.00762833,0.00772472,
                              0.00777538, 0.00781385, 0.00795488, 0.00801201,0.00804153,
                              0.0080954, 0.00815026, 0.00821781, 0.00842953,0.00863379,
                              0.00869071, 0.00874824, 0.00907259, 0.00917361,0.00979344,
                              0.0100087, 0.0100261, 0.0100867, 0.0100971, 0.0101854,0.01026,
                              0.0108229, 0.0108943, 0.011029, 0.0110813, 0.0112094,0.0113678,
                              0.011426, 0.0116217, 0.0116673, 0.0118199, 0.0118444,0.0122455,
                              0.0123015, 0.0124777, 0.0127191, 0.0128236, 0.0131895,0.0139242,
                              0.0140604, 0.0140632, 0.0143545, 0.0144651, 0.0145761,0.0146951,
                              0.0149069, 0.0152333, 0.015413, 0.0156316, 0.0158562,0.0159034,
                              0.0159406, 0.0161907, 0.0161911, 0.016664, 0.0168872,0.0169129])
    
def test_residuals():
    """Tests the calculation of the residuals"""

    from analyzefit.manipulate import residual

    y = np.array([-344.394, 406.493, 284.701, -97.201, 890.76,
                  36.2021, 411.995,926.705, 200.801, 795.422, 10.165, 87.8461,
                  -417.643, 987.371,990.404, 266.836, -200.65, 340.875, 124.919,
                  -378.523, -188.502,-377.06, -1.94228, 25.5254, 1124.47, 467.332,
                  187.032, -168.885,393.612, 938.256, 111.023, 566.393, -152.932,
                  -51.6802, 972.397,295.805, 750.308, 472.287, -162.156, 620.67,
                  150.758, 313.752,384.942, 241.574, 1339.55, 496.686, -186.131,
                  1038.92, 867.771,568.574, 408.846, 455.614, 349.892, -555.841,
                  210.659, 1371.31,249.855, 931.928, 1039.91, 263.887, 564.448,
                  114.832, 359.517,363.98, 267.371, -17.5845, 60.3293, 492.28,
                  1162.86, -168.034,-202.379, 101.157, 421.213, 984.379, -137.611,
                  49.9437, -315.846,1169.25, 453.098, 849.117, 807.195, 1345.27,
                  476.425, 913.851,-14.1659, 713.828, 163.81, 1227.05, 976.878,
                  565.278, 777.794, 462.7,1058.26, 877.479, -160.306, 692.979,
                  253.652, 1012.68, 1766.9,395.005, 1130.24, 892.136, 452.922,
                  1353.47, 1609.18, 978.588,625.592, 757.229, 131.165, 1116.59,
                  1721.96, 918.549, 792.347,940.093, 1354.88, 2108.32, 617.372,
                  397.74, 1106.02, 828.588,1359.92, 904.209, 964.834, 1447.43,
                  1159.81, 1706.84, 1164.39,-509.539, 815.02, -65.4324, 1430.,
                  1710.89, 539.036, 1530.04,2121.96, 800.457, 1300.4, 1390.99,
                  1343.32, 966.123, 896.658,802.404, 1570.45, 1094.52, 2065.82,
                  874.076, 1085.83, 587.952,1157.28, 849.961, 1561.99, 1480.78,
                  927.974, 1026.84, 1394.2,693.967, 1133.77, 1945.79, 1193.42,
                  1980.5, 1265.28, 1557.98,1234.08, 1361.59, 877.161, 976.662,
                  1931.72, 1644.52, 724.153,880.017, 2036.05, 670.79, 1589.9,
                  189.085, 1109.45, 1186.11, 545.696,987.276, 1194.04, 1412.46,
                  1988.47, 847.359, 2141.71, 721.27,1711.15, 1472.61, 1432.54,
                  1896.15, 1223.68, 1500.87, 1356.3,1989.55, 1989.05, 1241.46,
                  1668.38, 1461.65, 1270.16, 1719.78,1639.58, 1114.72, 1934.79,
                  1660.98, 1498.28, 1786.55, 1581.67,1850.56, 1347.81, 1707.29,
                  782.208, 1848.1, 1293.77, 1343.62, 1890.2,2525.66, 1273.08,
                  2120.9, 1153.63, 1905.77, 1452.36, 2439.63,2874.28, 2249.74,
                  1262.42, 1904.21, 1866.14, 2716.27, 2549.79,2827.83, 1957.38,
                  2358.45, 2142.61, 1577.78, 1604.24, 1561.53,1441.74, 2022.74,
                  1472.18, 2263.4, 2295.25, 2194.55, 619.001,886.223, 2328.43,
                  2096.76, 1869.75, 773.838, 2935.13, 1831.18,1644.25, 2266.43])
    pred = np.array([103.744, 110.198, 110.647, 113.745, 115.862,
                     115.983, 117.061,125.676, 129.594, 147.694, 151.731, 157.767,
                     171.512, 171.675,181.483, 220.271, 223.888, 226.22, 238.228, 242.75,
                     271.824, 286.4,304.492, 314.051, 320.369, 327.945, 331.797, 341.2,
                     342.454, 350.936,354.747, 354.922, 361.025, 383.61, 387.511, 389.142,
                     390.655,407.372, 413.547, 413.657, 419.709, 422.575, 429.373,
                     433.939,434.887, 438.98, 441.759, 443.216, 445.636, 447.346, 448.33,
                     450.212,460.142, 461.717, 462.881, 466.121, 477.424, 482.61,
                     488.478,490.488, 490.501, 495.45, 503.829, 516.261, 517.966,
                     543.799,544.486, 573.781, 584.532, 586.509, 587.988, 590.687,
                     592.787,607.711, 627.815, 650.909, 656.041, 673.336, 674.746,
                     677.514,682.83, 695.157, 706.694, 718.779, 721.428, 723.096,
                     723.814,732.381, 734.186, 741.809, 744.771, 745.291, 750.584,
                     751.806,756.015, 761.345, 768.608, 772.173, 776.906, 783.289,
                     802.295,804.688, 813.017, 823.315, 837.855, 842.949, 843.226,
                     850.283,852.856, 870.062, 870.902, 884.464, 887.938, 893.972,
                     896.171,900.733, 905.027, 907.616, 908.637, 911.778, 912.141,
                     935.458,946.716, 954.746, 965.339, 969.63, 975.091, 988.714,
                     989.677,1004.02, 1011.16, 1016.05, 1021.36, 1032.07, 1037.06,
                     1041.9,1061.91, 1068.57, 1074.32, 1089.23, 1095.07, 1097.64,
                     1099.25,1111.54, 1114.29, 1120.69, 1121.8, 1135.08, 1139.56, 1144.95,
                     1162.6,1169.28, 1173.75, 1176.7, 1186.59, 1201.28, 1207.95,
                     1229.67,1241.02, 1244.44, 1251.26, 1269.16, 1282.34, 1294.98,
                     1307.21,1309.84, 1313.29, 1318.22, 1318.84, 1324.98, 1326.76,
                     1349.79,1352.96, 1353.62, 1355.81, 1358.89, 1376.19, 1381.4,
                     1392.75,1400.95, 1404.21, 1409.35, 1434.01, 1443.27, 1443.84,
                     1448.41,1454.88, 1460.58, 1471.75, 1474.78, 1477.76, 1478.9,
                     1492.72,1492.83, 1500.61, 1501.26, 1520.45, 1560.55, 1562.47, 1568.,
                     1582.24,1597.76, 1608.96, 1633.14, 1656.52, 1671.56, 1677.3, 1679.24,
                     1692.21, 1709.76, 1711.45, 1735.94, 1736.72, 1737.28, 1744.47,
                     1744.51,1752.55, 1756.36, 1756.53, 1779.29, 1781.03, 1783.64,
                     1789.01,1799.75, 1808.91, 1818.45, 1828.02, 1883.07, 1884.44,
                     1892.82,1894.64, 1895.86, 1911.56, 1918.53, 1919.31, 1923.02, 1928.,
                     1930.85,1941.57, 1944.11, 1948.33, 1954.68, 1962.36, 1968.96,
                     1976.41,1979.81, 1981.52, 1982.79, 1984.49, 2008.53])

    res_a = np.array([-448.138, 296.295, 174.054, -210.946, 774.898,
                     -79.7807, 294.934,801.03, 71.2068, 647.728, -141.566, -69.9212,
                     -589.155, 815.695,808.921, 46.5654, -424.538, 114.656, -113.309,
                     -621.273, -460.326,-663.46, -306.435, -288.525, 804.106, 139.388,
                     -144.765, -510.084,51.1581, 587.32, -243.725, 211.471, -513.958,
                     -435.291, 584.886,-93.3369, 359.654, 64.9146, -575.703, 207.014,
                     -268.951, -108.823,-44.4313, -192.365, 904.658, 57.7059, -627.889,
                     595.705, 422.135,121.229, -39.4842, 5.4012, -110.25, -1017.56,
                     -252.222, 905.189,-227.569, 449.318, 551.435, -226.601, 73.9469,
                     -380.618, -144.312,-152.282, -250.595, -561.384, -484.157,
                     -81.5016, 578.326, -754.543,-790.368, -489.53, -171.575, 376.669,
                     -765.427, -600.965, -971.887,495.912, -221.648, 171.604, 124.365,
                     650.115, -230.269, 195.072,-735.594, -9.26816, -560.003, 494.671,
                     242.692, -176.531, 33.0229,-282.592, 307.672, 125.673, -916.321,
                     -68.3663, -514.956, 240.507,989.989, -388.284, 327.944, 87.4484,
                     -360.096, 530.156, 771.327,135.639, -217.634, -93.0533, -721.691,
                     246.533, 851.055, 34.0854,-95.5908, 46.1219, 458.707, 1207.59,
                     -287.655, -509.875, 197.383,-83.1904, 447.774, -31.2488, 18.1176,
                     492.681, 194.47, 737.21,189.295, -1498.25, -174.657, -1069.45,
                     418.841, 694.836, -482.321,497.974, 1084.9, -241.443, 238.494,
                     322.417, 269.006, -123.109,-198.416, -295.232, 471.192, -17.0156,
                     951.53, -246.616, -35.9618,-547.128, 17.7212, -294.987, 399.391,
                     311.505, -245.777, -149.868,207.618, -507.312, -74.1815, 716.119,
                     -47.5908, 736.057, 14.0224,288.823, -48.2625, 66.6133, -430.052,
                     -333.18, 618.438, 326.308,-594.686, -444.966, 709.291, -678.996,
                     236.941, -1164.53, -246.36,-172.782, -830.497, -394.129, -198.712,
                     11.508, 584.257, -561.989,707.702, -721.998, 267.316, 24.2029,
                     -22.3446, 435.568, -248.071,26.0902, -121.463, 510.648, 496.324,
                     -251.373, 167.768, -39.6083,-250.287, 159.233, 77.1074, -453.278,
                     352.544, 63.2239, -110.683,153.402, -74.8479, 178.997, -329.487,
                     28.0554, -910.001, 138.336,-417.681, -392.326, 153.475, 788.381,
                     -471.386, 376.391, -598.917,149.409, -304.175, 660.34, 1093.25,
                     466.107, -526.591, 104.455,57.2256, 897.825, 721.765, 944.754,
                     72.9415, 465.634, 247.97,-318.084, -307.318, -356.995, -477.574,
                     99.7208, -455.822, 332.551,353.675, 250.44, -1329.33, -1068.46,
                     366.069, 127.795, -106.66,-1205.98, 953.607, -151.611, -340.236,
                     257.893])

    res_c = residual(y,pred)
    
    assert np.allclose(res_a,res_c,atol=1E-1,rtol=1E-1)

    with pytest.raises(ValueError):
        residual([1,2],[3,4,5])


def test_std_res():
    """Tests the standardized residual calculation."""

    from analyzefit.manipulate import std_residuals
    
    y = np.array([-344.394, 406.493, 284.701, -97.201, 890.76,
                  36.2021, 411.995,926.705, 200.801, 795.422, 10.165, 87.8461,
                  -417.643, 987.371,990.404, 266.836, -200.65, 340.875, 124.919,
                  -378.523, -188.502,-377.06, -1.94228, 25.5254, 1124.47, 467.332,
                  187.032, -168.885,393.612, 938.256, 111.023, 566.393, -152.932,
                  -51.6802, 972.397,295.805, 750.308, 472.287, -162.156, 620.67,
                  150.758, 313.752,384.942, 241.574, 1339.55, 496.686, -186.131,
                  1038.92, 867.771,568.574, 408.846, 455.614, 349.892, -555.841,
                  210.659, 1371.31,249.855, 931.928, 1039.91, 263.887, 564.448,
                  114.832, 359.517,363.98, 267.371, -17.5845, 60.3293, 492.28,
                  1162.86, -168.034,-202.379, 101.157, 421.213, 984.379, -137.611,
                  49.9437, -315.846,1169.25, 453.098, 849.117, 807.195, 1345.27,
                  476.425, 913.851,-14.1659, 713.828, 163.81, 1227.05, 976.878,
                  565.278, 777.794, 462.7,1058.26, 877.479, -160.306, 692.979,
                  253.652, 1012.68, 1766.9,395.005, 1130.24, 892.136, 452.922,
                  1353.47, 1609.18, 978.588,625.592, 757.229, 131.165, 1116.59,
                  1721.96, 918.549, 792.347,940.093, 1354.88, 2108.32, 617.372,
                  397.74, 1106.02, 828.588,1359.92, 904.209, 964.834, 1447.43,
                  1159.81, 1706.84, 1164.39,-509.539, 815.02, -65.4324, 1430.,
                  1710.89, 539.036, 1530.04,2121.96, 800.457, 1300.4, 1390.99,
                  1343.32, 966.123, 896.658,802.404, 1570.45, 1094.52, 2065.82,
                  874.076, 1085.83, 587.952,1157.28, 849.961, 1561.99, 1480.78,
                  927.974, 1026.84, 1394.2,693.967, 1133.77, 1945.79, 1193.42,
                  1980.5, 1265.28, 1557.98,1234.08, 1361.59, 877.161, 976.662,
                  1931.72, 1644.52, 724.153,880.017, 2036.05, 670.79, 1589.9,
                  189.085, 1109.45, 1186.11, 545.696,987.276, 1194.04, 1412.46,
                  1988.47, 847.359, 2141.71, 721.27,1711.15, 1472.61, 1432.54,
                  1896.15, 1223.68, 1500.87, 1356.3,1989.55, 1989.05, 1241.46,
                  1668.38, 1461.65, 1270.16, 1719.78,1639.58, 1114.72, 1934.79,
                  1660.98, 1498.28, 1786.55, 1581.67,1850.56, 1347.81, 1707.29,
                  782.208, 1848.1, 1293.77, 1343.62, 1890.2,2525.66, 1273.08,
                  2120.9, 1153.63, 1905.77, 1452.36, 2439.63,2874.28, 2249.74,
                  1262.42, 1904.21, 1866.14, 2716.27, 2549.79,2827.83, 1957.38,
                  2358.45, 2142.61, 1577.78, 1604.24, 1561.53,1441.74, 2022.74,
                  1472.18, 2263.4, 2295.25, 2194.55, 619.001,886.223, 2328.43,
                  2096.76, 1869.75, 773.838, 2935.13, 1831.18,1644.25, 2266.43])
    pred = np.array([103.744, 110.198, 110.647, 113.745, 115.862,
                     115.983, 117.061,125.676, 129.594, 147.694, 151.731, 157.767,
                     171.512, 171.675,181.483, 220.271, 223.888, 226.22, 238.228, 242.75,
                     271.824, 286.4,304.492, 314.051, 320.369, 327.945, 331.797, 341.2,
                     342.454, 350.936,354.747, 354.922, 361.025, 383.61, 387.511, 389.142,
                     390.655,407.372, 413.547, 413.657, 419.709, 422.575, 429.373,
                     433.939,434.887, 438.98, 441.759, 443.216, 445.636, 447.346, 448.33,
                     450.212,460.142, 461.717, 462.881, 466.121, 477.424, 482.61,
                     488.478,490.488, 490.501, 495.45, 503.829, 516.261, 517.966,
                     543.799,544.486, 573.781, 584.532, 586.509, 587.988, 590.687,
                     592.787,607.711, 627.815, 650.909, 656.041, 673.336, 674.746,
                     677.514,682.83, 695.157, 706.694, 718.779, 721.428, 723.096,
                     723.814,732.381, 734.186, 741.809, 744.771, 745.291, 750.584,
                     751.806,756.015, 761.345, 768.608, 772.173, 776.906, 783.289,
                     802.295,804.688, 813.017, 823.315, 837.855, 842.949, 843.226,
                     850.283,852.856, 870.062, 870.902, 884.464, 887.938, 893.972,
                     896.171,900.733, 905.027, 907.616, 908.637, 911.778, 912.141,
                     935.458,946.716, 954.746, 965.339, 969.63, 975.091, 988.714,
                     989.677,1004.02, 1011.16, 1016.05, 1021.36, 1032.07, 1037.06,
                     1041.9,1061.91, 1068.57, 1074.32, 1089.23, 1095.07, 1097.64,
                     1099.25,1111.54, 1114.29, 1120.69, 1121.8, 1135.08, 1139.56, 1144.95,
                     1162.6,1169.28, 1173.75, 1176.7, 1186.59, 1201.28, 1207.95,
                     1229.67,1241.02, 1244.44, 1251.26, 1269.16, 1282.34, 1294.98,
                     1307.21,1309.84, 1313.29, 1318.22, 1318.84, 1324.98, 1326.76,
                     1349.79,1352.96, 1353.62, 1355.81, 1358.89, 1376.19, 1381.4,
                     1392.75,1400.95, 1404.21, 1409.35, 1434.01, 1443.27, 1443.84,
                     1448.41,1454.88, 1460.58, 1471.75, 1474.78, 1477.76, 1478.9,
                     1492.72,1492.83, 1500.61, 1501.26, 1520.45, 1560.55, 1562.47, 1568.,
                     1582.24,1597.76, 1608.96, 1633.14, 1656.52, 1671.56, 1677.3, 1679.24,
                     1692.21, 1709.76, 1711.45, 1735.94, 1736.72, 1737.28, 1744.47,
                     1744.51,1752.55, 1756.36, 1756.53, 1779.29, 1781.03, 1783.64,
                     1789.01,1799.75, 1808.91, 1818.45, 1828.02, 1883.07, 1884.44,
                     1892.82,1894.64, 1895.86, 1911.56, 1918.53, 1919.31, 1923.02, 1928.,
                     1930.85,1941.57, 1944.11, 1948.33, 1954.68, 1962.36, 1968.96,
                     1976.41,1979.81, 1981.52, 1982.79, 1984.49, 2008.53])

    std_res_a = np.array([-0.928473, 0.613829, 0.360582, -0.436994,
                          1.60523, -0.165269,0.610959, 1.65917, 0.147484, 1.34129,
                          -0.293136, -0.144773, -1.21967,1.68865, 1.67444, 0.0963483,
                          -0.878378, 0.237219, -0.234404,-1.28517, -0.951958, -1.37184,
                          -0.633509, -0.59643, 1.66212,0.288101, -0.299205, -1.05417,
                          0.105725, 1.21368, -0.503634,0.436984, -1.06199, -0.899264,
                          1.20827, -0.192815, 0.742962, 0.13408,-1.18905, 0.427563,
                          -0.555461, -0.224745, -0.0917564, -0.397244,1.86816, 0.119161,
                          -1.29655, 1.23008, 0.871654, 0.250319, -0.0815281,0.0111524,
                          -0.227628, -2.10088, -0.52074, 1.86882, -0.469792,0.927534,
                          1.13829, -0.467749, 0.152641, -0.785645, -0.297862,-0.314285,
                          -0.517183, -1.1584, -0.999041, -0.168146, 1.19307,-1.55658,
                          -1.63048, -1.00985, -0.353937, 0.776957, -1.57868,-1.23934,
                          -2.00423, 1.02259, -0.457043, 0.353847, 0.256435,
                          1.34043,-0.474755, 0.402169, -1.51652, -0.0191073, -1.1545,
                          1.01978,0.500315, -0.363912, 0.0680747, -0.582545, 0.634234,
                          0.259062,-1.88887, -0.140925, -1.06146, 0.495744, 2.04058,
                          -0.800322,0.675913, 0.180235, -0.742158, 1.09262, 1.58961,
                          0.279531, -0.44851,-0.191766, -1.48726, 0.508038, 1.75379,
                          0.070239, -0.196981,0.0950408, 0.945229, 2.48838, -0.592744,
                          -1.05065, 0.406726,-0.171421, 0.922679, -0.0643891, 0.0373314,
                          1.01517, 0.400701, 1.519,0.390036, -3.08708, -0.359872, -2.20355,
                          0.862999, 1.43167,-0.993795, 1.02605, 2.23539, -0.497482, 0.49141,
                          0.664335, 0.554285,-0.253668, -0.408843, -0.608336, 0.970912,
                          -0.0350618, 1.9607,-0.508175, -0.0741029, -1.12744, 0.0365172,
                          -0.607872, 0.823042,0.64194, -0.506495, -0.308847, 0.427868,
                          -1.04553, -0.152884,1.47597, -0.0980913, 1.51713, 0.0289031,
                          0.595358, -0.0994892,0.137324, -0.886598, -0.686894, 1.27501,
                          0.672748, -1.22607,-0.917411, 1.4624, -1.40007, 0.488573,
                          -2.40127, -0.508, -0.356286,-1.71267, -0.812802, -0.409822,
                          0.0237349, 1.20504, -1.15914,1.45988, -1.48944, 0.55146,
                          0.0499308, -0.0460988, 0.898644,-0.511841, 0.0538326, -0.250622,
                          1.05366, 1.02419, -0.518723,0.346217, -0.0817386, -0.516575,
                          0.328738, 0.159191, -0.935846,0.727947, 0.130563, -0.228589,
                          0.316878, -0.154641, 0.369868,-0.680867, 0.0579759, -1.88071,
                          0.285947, -0.863379, -0.811156,0.317321, 1.63004, -0.974697,
                          0.778273, -1.23849, 0.308974,-0.629025, 1.36587, 2.26136,
                          0.964159, -1.08933, 0.216104, 0.118404,1.85786, 1.49369, 1.95638,
                          0.151048, 0.964334, 0.51356, -0.658779,-0.636602, -0.739569,
                          -0.989375, 0.206598, -0.944411, 0.689031,0.732897, 0.518986,
                          -2.7549, -2.21446, 0.758777, 0.264911, -0.221121,-2.50027,
                          1.97709, -0.314336, -0.705431, 0.534874])
    std_res_c = std_residuals(y,pred)

    assert np.allclose(std_res_a,std_res_c,1E-2,1E-2)
    
def test_cooks_dist():
    """Tests the calculation of Cook's Distnace"""                     
    
    from analyzefit.manipulate import cooks_dist
    
    y = np.array([-344.394, 406.493, 284.701, -97.201, 890.76,
                  36.2021, 411.995,926.705, 200.801, 795.422, 10.165, 87.8461,
                  -417.643, 987.371,990.404, 266.836, -200.65, 340.875, 124.919,
                  -378.523, -188.502,-377.06, -1.94228, 25.5254, 1124.47, 467.332,
                  187.032, -168.885,393.612, 938.256, 111.023, 566.393, -152.932,
                  -51.6802, 972.397,295.805, 750.308, 472.287, -162.156, 620.67,
                  150.758, 313.752,384.942, 241.574, 1339.55, 496.686, -186.131,
                  1038.92, 867.771,568.574, 408.846, 455.614, 349.892, -555.841,
                  210.659, 1371.31,249.855, 931.928, 1039.91, 263.887, 564.448,
                  114.832, 359.517,363.98, 267.371, -17.5845, 60.3293, 492.28,
                  1162.86, -168.034,-202.379, 101.157, 421.213, 984.379, -137.611,
                  49.9437, -315.846,1169.25, 453.098, 849.117, 807.195, 1345.27,
                  476.425, 913.851,-14.1659, 713.828, 163.81, 1227.05, 976.878,
                  565.278, 777.794, 462.7,1058.26, 877.479, -160.306, 692.979,
                  253.652, 1012.68, 1766.9,395.005, 1130.24, 892.136, 452.922,
                  1353.47, 1609.18, 978.588,625.592, 757.229, 131.165, 1116.59,
                  1721.96, 918.549, 792.347,940.093, 1354.88, 2108.32, 617.372,
                  397.74, 1106.02, 828.588,1359.92, 904.209, 964.834, 1447.43,
                  1159.81, 1706.84, 1164.39,-509.539, 815.02, -65.4324, 1430.,
                  1710.89, 539.036, 1530.04,2121.96, 800.457, 1300.4, 1390.99,
                  1343.32, 966.123, 896.658,802.404, 1570.45, 1094.52, 2065.82,
                  874.076, 1085.83, 587.952,1157.28, 849.961, 1561.99, 1480.78,
                  927.974, 1026.84, 1394.2,693.967, 1133.77, 1945.79, 1193.42,
                  1980.5, 1265.28, 1557.98,1234.08, 1361.59, 877.161, 976.662,
                  1931.72, 1644.52, 724.153,880.017, 2036.05, 670.79, 1589.9,
                  189.085, 1109.45, 1186.11, 545.696,987.276, 1194.04, 1412.46,
                  1988.47, 847.359, 2141.71, 721.27,1711.15, 1472.61, 1432.54,
                  1896.15, 1223.68, 1500.87, 1356.3,1989.55, 1989.05, 1241.46,
                  1668.38, 1461.65, 1270.16, 1719.78,1639.58, 1114.72, 1934.79,
                  1660.98, 1498.28, 1786.55, 1581.67,1850.56, 1347.81, 1707.29,
                  782.208, 1848.1, 1293.77, 1343.62, 1890.2,2525.66, 1273.08,
                  2120.9, 1153.63, 1905.77, 1452.36, 2439.63,2874.28, 2249.74,
                  1262.42, 1904.21, 1866.14, 2716.27, 2549.79,2827.83, 1957.38,
                  2358.45, 2142.61, 1577.78, 1604.24, 1561.53,1441.74, 2022.74,
                  1472.18, 2263.4, 2295.25, 2194.55, 619.001,886.223, 2328.43,
                  2096.76, 1869.75, 773.838, 2935.13, 1831.18,1644.25, 2266.43])
    pred = np.array([103.744, 110.198, 110.647, 113.745, 115.862,
                     115.983, 117.061,125.676, 129.594, 147.694, 151.731, 157.767,
                     171.512, 171.675,181.483, 220.271, 223.888, 226.22, 238.228, 242.75,
                     271.824, 286.4,304.492, 314.051, 320.369, 327.945, 331.797, 341.2,
                     342.454, 350.936,354.747, 354.922, 361.025, 383.61, 387.511, 389.142,
                     390.655,407.372, 413.547, 413.657, 419.709, 422.575, 429.373,
                     433.939,434.887, 438.98, 441.759, 443.216, 445.636, 447.346, 448.33,
                     450.212,460.142, 461.717, 462.881, 466.121, 477.424, 482.61,
                     488.478,490.488, 490.501, 495.45, 503.829, 516.261, 517.966,
                     543.799,544.486, 573.781, 584.532, 586.509, 587.988, 590.687,
                     592.787,607.711, 627.815, 650.909, 656.041, 673.336, 674.746,
                     677.514,682.83, 695.157, 706.694, 718.779, 721.428, 723.096,
                     723.814,732.381, 734.186, 741.809, 744.771, 745.291, 750.584,
                     751.806,756.015, 761.345, 768.608, 772.173, 776.906, 783.289,
                     802.295,804.688, 813.017, 823.315, 837.855, 842.949, 843.226,
                     850.283,852.856, 870.062, 870.902, 884.464, 887.938, 893.972,
                     896.171,900.733, 905.027, 907.616, 908.637, 911.778, 912.141,
                     935.458,946.716, 954.746, 965.339, 969.63, 975.091, 988.714,
                     989.677,1004.02, 1011.16, 1016.05, 1021.36, 1032.07, 1037.06,
                     1041.9,1061.91, 1068.57, 1074.32, 1089.23, 1095.07, 1097.64,
                     1099.25,1111.54, 1114.29, 1120.69, 1121.8, 1135.08, 1139.56, 1144.95,
                     1162.6,1169.28, 1173.75, 1176.7, 1186.59, 1201.28, 1207.95,
                     1229.67,1241.02, 1244.44, 1251.26, 1269.16, 1282.34, 1294.98,
                     1307.21,1309.84, 1313.29, 1318.22, 1318.84, 1324.98, 1326.76,
                     1349.79,1352.96, 1353.62, 1355.81, 1358.89, 1376.19, 1381.4,
                     1392.75,1400.95, 1404.21, 1409.35, 1434.01, 1443.27, 1443.84,
                     1448.41,1454.88, 1460.58, 1471.75, 1474.78, 1477.76, 1478.9,
                     1492.72,1492.83, 1500.61, 1501.26, 1520.45, 1560.55, 1562.47, 1568.,
                     1582.24,1597.76, 1608.96, 1633.14, 1656.52, 1671.56, 1677.3, 1679.24,
                     1692.21, 1709.76, 1711.45, 1735.94, 1736.72, 1737.28, 1744.47,
                     1744.51,1752.55, 1756.36, 1756.53, 1779.29, 1781.03, 1783.64,
                     1789.01,1799.75, 1808.91, 1818.45, 1828.02, 1883.07, 1884.44,
                     1892.82,1894.64, 1895.86, 1911.56, 1918.53, 1919.31, 1923.02, 1928.,
                     1930.85,1941.57, 1944.11, 1948.33, 1954.68, 1962.36, 1968.96,
                     1976.41,1979.81, 1981.52, 1982.79, 1984.49, 2008.53])

    X = np.transpose([[0.0156884, 0.354354, 0.377909, 0.54048, 0.651569,
                  0.657912, 0.71451,1.16656, 1.37219, 2.32199, 2.53386, 2.85061,
                  3.57188, 3.58046,4.09514, 6.13059, 6.3204, 6.44276, 7.0729,
                  7.31023, 8.83592, 9.6008,10.5502, 11.0518, 11.3834, 11.7809,
                  11.9831, 12.4765, 12.5423,12.9874, 13.1874, 13.1966, 13.5169,
                  14.7021, 14.9067, 14.9923,15.0717, 15.949, 16.273, 16.2788,
                  16.5964, 16.7468, 17.1035, 17.3431,17.3929, 17.6077, 17.7535,
                  17.8299, 17.957, 18.0467, 18.0983,18.1971, 18.7182, 18.8008,
                  18.8619, 19.0319, 19.6251, 19.8972,20.2052, 20.3106, 20.3113,
                  20.571, 21.0107, 21.6631, 21.7526,23.1082, 23.1442, 24.6816,
                  25.2457, 25.3494, 25.4271, 25.5687,25.6789, 26.4621, 27.5171,
                  28.7289, 28.9983, 29.9058, 29.9798,30.1251, 30.404, 31.0509,
                  31.6563, 32.2905, 32.4296, 32.5171,32.5547, 33.0043, 33.099,
                  33.499, 33.6545, 33.6818, 33.9596, 34.0237,34.2445, 34.5242,
                  34.9054, 35.0925, 35.3408, 35.6758, 36.6732,36.7987, 37.2358,
                  37.7762, 38.5392, 38.8065, 38.8211, 39.1914,39.3264, 40.2293,
                  40.2734, 40.9851, 41.1674, 41.484, 41.5994,41.8388, 42.0642, 42.2,
                  42.2536, 42.4184, 42.4375, 43.6611, 44.2519,44.6732, 45.2291,
                  45.4543, 45.7409, 46.4558, 46.5063, 47.259,47.6334, 47.8904,
                  48.1687, 48.7309, 48.9927, 49.2468, 50.2967,50.6462, 50.9478,
                  51.7306, 52.0372, 52.1716, 52.2564, 52.9012,53.0455, 53.3815,
                  53.4394, 54.1365, 54.3716, 54.6544, 55.5807,55.9311, 56.1658,
                  56.3208, 56.8393, 57.6104, 57.9605, 59.1003,59.6956, 59.8754,
                  60.2332, 61.1724, 61.8644, 62.5274, 63.1695,63.3074, 63.4881,
                  63.7468, 63.7795, 64.102, 64.1953, 65.4036,65.5701, 65.6045,
                  65.7195, 65.8812, 66.7893, 67.0628, 67.6581,68.0886, 68.2597,
                  68.5291, 69.8233, 70.3091, 70.3389, 70.579,70.9185, 71.2179,
                  71.8036, 71.9628, 72.1194, 72.1791, 72.9043,72.9099, 73.3183,
                  73.3525, 74.3593, 76.4636, 76.5647, 76.8545,77.6021, 78.4163,
                  79.0041, 80.2732, 81.4998, 82.2891, 82.5901,82.692, 83.3727,
                  84.2937, 84.3825, 85.6678, 85.7085, 85.7377, 86.115,86.1172,
                  86.5389, 86.7394, 86.748, 87.9426, 88.0339, 88.1704,88.4523,
                  89.0161, 89.4969, 89.9972, 90.4998, 93.3885, 93.4601,93.9001,
                  93.9957, 94.0597, 94.8833, 95.2489, 95.2902, 95.4849,95.7461,
                  95.8959, 96.4583, 96.5918, 96.8128, 97.1464, 97.5492,97.8958,
                   98.2867, 98.4651, 98.5548, 98.6213, 98.7103, 99.9722]])

    c_dist_a = np.array([0.00653276, 0.00282537, 0.000974249,
                         0.00142367, 0.0191437,0.000202883, 0.0027677, 0.0201244,
                         0.000157987, 0.0126807,0.000601607, 0.000145268, 0.0100753,
                         0.0193078, 0.0186726,0.0000578651, 0.00477955, 0.000347198,
                         0.000332042, 0.00990331,0.00516472, 0.0104539, 0.00215904,
                         0.00188145, 0.014448, 0.000428241,0.000458715, 0.00559888,
                         0.0000561899, 0.00729267, 0.00124717,0.000938618, 0.00548297,
                         0.00377399, 0.00676524, 0.00017177,0.00254335, 0.000080352,
                         0.00624855, 0.000807779, 0.00134836,0.000219588, 0.0000361502,
                         0.000671942, 0.0148351, 0.0000599082,0.00705648, 0.00633458,
                         0.0031668, 0.000260352, 0.0000275681,5.14086E-7, 0.000210311,
                         0.0178634, 0.00109516, 0.0140216,0.000867966, 0.00335147,
                         0.00499373, 0.000840143, 0.0000894665,0.0023488, 0.000332498,
                         0.00036189, 0.00097695, 0.00467715,0.00347449, 0.0000933859,
                         0.0046126, 0.00782418, 0.00856221,0.0032689, 0.000400065,
                         0.00187804, 0.00748839, 0.00443763,0.0115062, 0.00291097,
                         0.000580163, 0.000346187, 0.000180259,0.00482924, 0.000594932,
                         0.00041906, 0.00593482, 9.39763E-7,0.00342721, 0.00264002,
                         0.000633756, 0.000331578, 0.0000115533,0.000845407, 0.00099453,
                         0.000165643, 0.00875368, 0.0000483656,0.00271673, 0.000589736,
                         0.00992899, 0.00151455, 0.00105464,0.0000747714, 0.00125523,
                         0.00268849, 0.00560048, 0.00017226,0.000443346, 0.000080468,
                         0.00482778, 0.000554276, 0.00660032,0.0000104648, 0.0000820736,
                         0.0000190166, 0.00187786, 0.0129706,0.000733728, 0.00230112,
                         0.000344608, 0.0000610856, 0.00176932,8.49942E-6,
                         2.84163E-6, 0.00209426, 0.000325045, 0.00466483,0.000307089,
                         0.0191805, 0.000260609, 0.00975418, 0.00149559,0.00411584,
                         0.00198345, 0.00211604, 0.0100501, 0.000498148,0.000488426,
                         0.000894615, 0.000624092, 0.000131561, 0.00034275,0.000759865,
                         0.00193726, 2.54448E-6, 0.00797079, 0.000537681,0.0000114417,
                         0.00267395, 2.8149E-6, 0.000783356, 0.0014581,0.00089253,
                         0.000558012, 0.000208081, 0.000403362, 0.00244665,0.0000527076,
                         0.00504058, 0.0000225825, 0.0054259, 1.98692E-6,0.000863707,
                         0.0000245714, 0.0000476803, 0.00202404, 0.00121975,0.00422466,
                         0.0011851, 0.00393997, 0.00222705, 0.00567462,0.00539532,
                         0.000660408, 0.0159698, 0.000717288, 0.000354609,0.00843226,
                         0.00191585, 0.0004965, 1.68884E-6, 0.0043777,0.00408657,
                         0.00676696, 0.00715982, 0.000982469, 8.11983E-6,7.00137E-6,
                         0.00268779, 0.000889547, 9.8936E-6, 0.000215592,0.00381843,
                         0.0036989, 0.000948995, 0.000428753, 0.0000239265,0.000989531,
                         0.000431171, 0.000101465, 0.00354221, 0.00219977,0.0000727997,
                         0.000227764, 0.000457397, 0.000113652, 0.000668082,0.00228744,
                         0.0000166433, 0.0179273, 0.000427643, 0.00391043,0.00360523,
                         0.000552481, 0.0145931, 0.00528451, 0.00336947,0.00865433,
                         0.000542257, 0.00224814, 0.0110307, 0.0303275,0.00553809,
                         0.00713567, 0.0002861, 0.0000872543, 0.0218368,0.0143483,
                         0.027008, 0.000161363, 0.00666922, 0.0018972,
                         0.00312815,0.00299766, 0.00409229, 0.00733315, 0.000321702,
                         0.00677722,0.00362432, 0.00417244, 0.00210089, 0.0596017,
                         0.0389073, 0.00462461,0.000569686, 0.000401653, 0.0516314,
                         0.0323723, 0.000819939,0.00414066, 0.00247238])
    c_dist_c = cooks_dist(y,pred,X)

    assert np.allclose(c_dist_a,c_dist_c,1E-3,1E-3)
